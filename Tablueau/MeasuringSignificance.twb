<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' inline='true' name='oracle.41959.928897986108' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='DS_NATURAL_DISASTERS' server='128.83.138.158' service='PDBORCL' username='ds_natural_disasters'>
        <relation name='EMDAT_WORLDBANK' table='[DS_NATURAL_DISASTERS].[EMDAT_WORLDBANK]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_NAME]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>COUNTRY_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_CODE]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>COUNTRY_CODE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISASTER_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISASTER_TYPE]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>DISASTER_TYPE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OCCURRENCE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OCCURRENCE]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>OCCURRENCE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>DEATHS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AFFECTED</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AFFECTED]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>AFFECTED</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INJURED</remote-name>
            <remote-type>131</remote-type>
            <local-name>[INJURED]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>INJURED</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOMELESS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOMELESS]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>HOMELESS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_AFFECTED</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_AFFECTED]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>TOTAL_AFFECTED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DAMAGE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_DAMAGE]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>TOTAL_DAMAGE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_EMMISIONS_KT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[CO2_EMMISIONS_KT]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>CO2_EMMISIONS_KT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POWER_CONS_KWH_PER_CAPITA</remote-name>
            <remote-type>4</remote-type>
            <local-name>[POWER_CONS_KWH_PER_CAPITA]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>POWER_CONS_KWH_PER_CAPITA</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOREST_AREA_PERC_LAND_AREA</remote-name>
            <remote-type>4</remote-type>
            <local-name>[FOREST_AREA_PERC_LAND_AREA]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>FOREST_AREA_PERC_LAND_AREA</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOSSIL_FUEL_PERC_ENERGY_CONS</remote-name>
            <remote-type>4</remote-type>
            <local-name>[FOSSIL_FUEL_PERC_ENERGY_CONS]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>FOSSIL_FUEL_PERC_ENERGY_CONS</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_US_DOLLARS</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GDP_US_DOLLARS]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>GDP_US_DOLLARS</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INT_USERS_PER_HUNDRED_PPL</remote-name>
            <remote-type>4</remote-type>
            <local-name>[INT_USERS_PER_HUNDRED_PPL]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>INT_USERS_PER_HUNDRED_PPL</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>METHAN_EMISSIONS_KT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[METHAN_EMISSIONS_KT]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>METHAN_EMISSIONS_KT</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MBL_SUBSCR_PER_HUNDRED_PPL</remote-name>
            <remote-type>4</remote-type>
            <local-name>[MBL_SUBSCR_PER_HUNDRED_PPL]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>MBL_SUBSCR_PER_HUNDRED_PPL</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NITR_OX_EMISSIONS_KT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[NITR_OX_EMISSIONS_KT]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>NITR_OX_EMISSIONS_KT</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERCENT_AGRICULTURAL_LAND</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PERCENT_AGRICULTURAL_LAND]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>PERCENT_AGRICULTURAL_LAND</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERC_TOTAL_PUB_HEALTH_EXP</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PERC_TOTAL_PUB_HEALTH_EXP]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>PERC_TOTAL_PUB_HEALTH_EXP</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPULATION</remote-name>
            <remote-type>4</remote-type>
            <local-name>[POPULATION]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>POPULATION</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERC_URB_POPULATION</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PERC_URB_POPULATION]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>PERC_URB_POPULATION</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CASE_ID]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>CASE_ID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INCOME_GROUP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INCOME_GROUP]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>INCOME_GROUP</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUBREGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUBREGION]</local-name>
            <parent-name>[EMDAT_WORLDBANK]</parent-name>
            <remote-alias>SUBREGION</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Affected' datatype='real' name='[AFFECTED]' role='measure' type='quantitative'>
      </column>
      <column caption='Case Id' datatype='real' name='[CASE_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Co2 Emmisions Kt' datatype='real' name='[CO2_EMMISIONS_KT]' role='measure' type='quantitative'>
      </column>
      <column caption='Country Code' datatype='string' name='[COUNTRY_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Country Name' datatype='string' name='[COUNTRY_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Dem. Rep. Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
          <semantic-value key='&quot;Dem. Rep. Korea&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Islamic Rep. Iran&quot;' value='&quot;Iran&quot;' />
          <semantic-value key='&quot;Rep. Korea&quot;' value='&quot;North Korea&quot;' />
        </semantic-values>
      </column>
      <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
      </column>
      <column caption='LOG10 Total Damage' datatype='real' name='[Calculation_7411117155930291]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG([TOTAL_DAMAGE],10)' scope-isolation='false' />
      </column>
      <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
      </column>
      <column caption='Deaths' datatype='real' name='[DEATHS]' role='measure' type='quantitative'>
      </column>
      <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
      </column>
      <column caption='Forest Area Perc Land Area' datatype='real' name='[FOREST_AREA_PERC_LAND_AREA]' role='measure' type='quantitative'>
      </column>
      <column caption='Fossil Fuel Perc Energy Cons' datatype='real' name='[FOSSIL_FUEL_PERC_ENERGY_CONS]' role='measure' type='quantitative'>
      </column>
      <column caption='Gdp Us Dollars' datatype='real' name='[GDP_US_DOLLARS]' role='measure' type='quantitative'>
      </column>
      <column caption='Homeless' datatype='real' name='[HOMELESS]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
      </column>
      <column caption='Injured' datatype='real' name='[INJURED]' role='measure' type='quantitative'>
      </column>
      <column caption='Int Users Per Hundred Ppl' datatype='real' name='[INT_USERS_PER_HUNDRED_PPL]' role='measure' type='quantitative'>
      </column>
      <column caption='Mbl Subscr Per Hundred Ppl' datatype='real' name='[MBL_SUBSCR_PER_HUNDRED_PPL]' role='measure' type='quantitative'>
      </column>
      <column caption='Methan Emissions Kt' datatype='real' name='[METHAN_EMISSIONS_KT]' role='measure' type='quantitative'>
      </column>
      <column caption='Nitr Ox Emissions Kt' datatype='real' name='[NITR_OX_EMISSIONS_KT]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Occurrence' datatype='real' name='[OCCURRENCE]' role='measure' type='quantitative'>
      </column>
      <column caption='Percent Agricultural Land' datatype='real' name='[PERCENT_AGRICULTURAL_LAND]' role='measure' type='quantitative'>
      </column>
      <column caption='Perc Total Pub Health Exp' datatype='real' name='[PERC_TOTAL_PUB_HEALTH_EXP]' role='measure' type='quantitative'>
      </column>
      <column caption='Perc Urb Population' datatype='real' name='[PERC_URB_POPULATION]' role='measure' type='quantitative'>
      </column>
      <column caption='Population' datatype='real' name='[POPULATION]' role='measure' type='quantitative'>
      </column>
      <column caption='Power Cons Kwh Per Capita' datatype='real' name='[POWER_CONS_KWH_PER_CAPITA]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[REGION]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[SUBREGION]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Affected' datatype='real' name='[TOTAL_AFFECTED]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Damage' datatype='real' name='[TOTAL_DAMAGE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COUNTRY_CODE]' derivation='None' name='[none:COUNTRY_CODE:nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTRY_NAME]' derivation='None' name='[none:COUNTRY_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
      <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
      <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
      <column-instance column='[SUBREGION]' derivation='None' name='[none:SUBREGION:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Disaster Type)' hidden='true' name='[Action (Disaster Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DISASTER_TYPE]' />
        </groupfilter>
      </group>
      <group caption='Action (INCOME_GROUP)' hidden='true' name='[Action (INCOME_GROUP)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[INCOME_GROUP]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country Name,Disaster Type,INCOME_GROUP,Year 2)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTRY_NAME:nk]' />
          <groupfilter function='level-members' level='[none:DISASTER_TYPE:nk]' />
          <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' />
          <groupfilter function='level-members' level='[none:YEAR:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country Name,Disaster Type,INCOME_GROUP,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTRY_NAME:nk]' />
          <groupfilter function='level-members' level='[none:DISASTER_TYPE:nk]' />
          <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' />
          <groupfilter function='level-members' level='[none:YEAR:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country Name,INCOME_GROUP,Year 2)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTRY_NAME:nk]' />
          <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' />
          <groupfilter function='level-members' level='[none:YEAR:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country Name,INCOME_GROUP,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTRY_NAME:nk]' />
          <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' />
          <groupfilter function='level-members' level='[none:YEAR:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[REGION]</field>
          <field>[SUBREGION]</field>
          <field>[COUNTRY_CODE]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Islamic Rep. Iran&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Dem. Rep. Congo&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;China Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dem. Rep. Korea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Rep. Korea&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SUBREGION:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Polynesia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Melanesia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Independent&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Australasia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY_CODE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:REGION:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;The Americas&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:INCOME_GROUP:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;High income: OECD&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;High income: nonOECD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:DISASTER_TYPE:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Drought&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Flood&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mass movement wet&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mass Movement Dry&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Insect infestation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Earthquake (seismic activity)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Storm&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mass Movement Wet&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Insect Infestation&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Volcano&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Wildfire&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Epidemic&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Mass movement dry&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Extreme temperature&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Regional Analysis Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Regional Analysis Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Damage GDP Ratio by Income Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Country Name' datatype='string' name='[COUNTRY_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Dem. Rep. Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
                <semantic-value key='&quot;Dem. Rep. Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Islamic Rep. Iran&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Rep. Korea&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
            </column>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Calculation_9121117181803216]' derivation='Avg' name='[avg:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY_NAME]' derivation='None' name='[none:COUNTRY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Sum' name='[sum:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.41959.928897986108].[sum:Calculation_9121117181803216:qk]' included-values='in-range'>
            <min>0.002</min>
            <max>1.0</max>
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[sum:Calculation_9121117181803216:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[oracle.41959.928897986108].[none:YEAR:qk]' value='36' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='rounding' id='annotation_2' value='medium' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_6' value='none' />
            <format attr='border-style' id='annotation_7' value='none' />
            <format attr='border-style' id='annotation_8' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
              <lod column='[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]' />
              <lod column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='690' />
                <format attr='maxwidth' value='690' />
                <format attr='minheight' value='524' />
                <format attr='maxheight' value='524' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</rows>
        <cols>[oracle.41959.928897986108].[none:YEAR:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='137'>
            <formatted-text>
              <run>Hurricane Luis, nearly $3 billion in damages&#10;Avg. Damage GDP Ratio: </run>
              <run bold='true'>&lt;[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1994.9656296296296'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.15314601740707326'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='30' y='-72' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Historically, Low to Middle Income countries sustain most of the Damage per GDP on average from natural disasters</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1962.3404444444445'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.27280849695811971'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1981.3223703703704'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.20584142124606619'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run>Tropical Cyclone Val, $88 million in damages&#10;Avg. Damage GDP Ratio: </run>
              <run bold='true'>&lt;[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1991.4870967741936'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.24864804134085475'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='110' y='-34' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='124'>
            <formatted-text>
              <run>Hurricane Ivan, $889 million in damages&#10;Avg. Damage GDP Ratio: </run>
              <run bold='true'>&lt;[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2003.9000000000001'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.19135586591669465'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='79' y='-68' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='117'>
            <formatted-text>
              <run>Earthquake, $800 million in damages&#10; Avg. Damage GDP Ratio: </run>
              <run bold='true'>&lt;[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2010.2189629629629'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.12130921092101501'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='9' y='-86' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run>Hurricane Iris, $250 million&#10;Avg. Damage GDP Ratio: </run>
              <run bold='true'>&lt;[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1961.1540740740741'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.19266757028631792'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='119' y='0' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Disaster Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[DISASTER_TYPE]' derivation='Count' name='[cnt:DISASTER_TYPE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41959.928897986108].[none:DISASTER_TYPE:nk] * [oracle.41959.928897986108].[cnt:DISASTER_TYPE:qk])</rows>
        <cols>[oracle.41959.928897986108].[none:YEAR:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='High Income Group Disasters'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
            </column>
            <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
            </column>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2951117145829777]' derivation='Avg' name='[avg:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Avg' name='[avg:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]'>
            <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;High income: OECD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='222' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='medium' />
            <format attr='rounding' id='annotation_1' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk] + [oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk])</rows>
        <cols></cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Earthquakes and Droughts have the biggest effect on High Income: OECD countries w.r.t the Total Damage to GDP Ratio</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.130631'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.00090576000012710474'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.855856'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.00048016192777822425'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontcolor='#f7f7f7'>Earthquakes and Droughts also have a significant effect on High Income OECD countries&apos; population</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.178947'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.026826950860354346'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.794737'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.014891231197908557'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Income Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Country Code' datatype='string' name='[COUNTRY_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COUNTRY_CODE]' derivation='None' name='[none:COUNTRY_CODE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]'>
            <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41959.928897986108].[Longitude (generated)]' field-type='quantitative' max='7923045.2942042835' min='-27735351.223009985' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41959.928897986108].[Latitude (generated)]' field-type='quantitative' max='14463146.931962376' min='-11897101.862379858' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
              <lod column='[oracle.41959.928897986108].[none:COUNTRY_CODE:nk]' />
              <geometry column='[oracle.41959.928897986108].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.41959.928897986108].[Latitude (generated)]</rows>
        <cols>[oracle.41959.928897986108].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Income Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[INCOME_GROUP]' derivation='Count' name='[cnt:INCOME_GROUP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[Action (Disaster Type)]'>
            <groupfilter function='level-members' level='[DISASTER_TYPE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[Action (Disaster Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='218' />
            <format attr='width' value='221' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
              <wedge-size column='[oracle.41959.928897986108].[cnt:INCOME_GROUP:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Low Income Group Disasters'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
            </column>
            <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
            </column>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2951117145829777]' derivation='Avg' name='[avg:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Avg' name='[avg:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' included-values='non-null'>
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Low income&quot;' />
              <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Lower middle income&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</column>
            <column>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='232' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='medium' />
            <format attr='rounding' id='annotation_1' value='medium' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk] + [oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk])</rows>
        <cols></cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Earthquakes, Storms, and Wildfires contribute the most to Total Damage (US dollars) per GDP in Low Income countries.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.193966'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='43099.682804544762'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.797414'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3558.6894058798412'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontcolor='#f7f7f7'>Drought and Volcanoes have the biggest impact on the population (homeless, deaths, injured, etc.) of Low Income countries.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.198276'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1294.5572949762059'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.801724'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='328.46976141187304'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Regional Pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World Disaster Count (1960-2014)&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[REGION]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[DISASTER_TYPE]' derivation='Count' name='[cnt:DISASTER_TYPE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[Action (INCOME_GROUP)]'>
            <groupfilter function='level-members' level='[INCOME_GROUP]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]'>
            <groupfilter function='level-members' level='[none:DISASTER_TYPE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:REGION:nk]' filter-group='3'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:REGION:nk]' to='&quot;The Americas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[none:REGION:nk]</column>
            <column>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</column>
            <column>[oracle.41959.928897986108].[Action (INCOME_GROUP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='234' />
            <format attr='width' value='267' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <wedge-size column='[oracle.41959.928897986108].[cnt:DISASTER_TYPE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sig. Ratio by Income Group '>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Country Name' datatype='string' name='[COUNTRY_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Dem. Rep. Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
                <semantic-value key='&quot;Dem. Rep. Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Islamic Rep. Iran&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Rep. Korea&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
            </column>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2951117145829777]' derivation='Avg' name='[avg:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY_NAME]' derivation='None' name='[none:COUNTRY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' included-values='non-null'>
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]'>
            <groupfilter from='&quot;High income: OECD&quot;' function='range' level='[none:INCOME_GROUP:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</column>
            <column>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[oracle.41959.928897986108].[none:YEAR:qk]' value='36' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
              <lod column='[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]' />
              <lod column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</rows>
        <cols>[oracle.41959.928897986108].[none:YEAR:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Historically, Developing Countries (Low to Middle Income groups) experience more significant (w.r.t population) disasters.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1958.0779279279277'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='282465.78123248246'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1975.0833333333333'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[none:YEAR:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='217708.34230363823'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sig. Ratio vs. Damage GDP Ratio'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Country Name' datatype='string' name='[COUNTRY_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Dem. Rep. Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
                <semantic-value key='&quot;Dem. Rep. Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Islamic Rep. Iran&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Rep. Korea&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
            </column>
            <column caption='LOG10 Total Damage' datatype='real' name='[Calculation_7411117155930291]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([TOTAL_DAMAGE],10)' scope-isolation='false' />
            </column>
            <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
            </column>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column caption='Total Damage' datatype='real' name='[TOTAL_DAMAGE]' role='measure' type='quantitative'>
            </column>
            <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2951117145829777]' derivation='Avg' name='[avg:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7411117155930291]' derivation='Avg' name='[avg:Calculation_7411117155930291:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Avg' name='[avg:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY_NAME]' derivation='None' name='[none:COUNTRY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2951117145829777]' derivation='Sum' name='[sum:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Sum' name='[sum:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_DAMAGE]' derivation='Sum' name='[sum:TOTAL_DAMAGE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[Exclusions (Country Name,INCOME_GROUP,Year 2)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:COUNTRY_NAME:nk]' />
                <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' />
                <groupfilter function='level-members' level='[none:YEAR:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Lower middle income&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:COUNTRY_NAME:nk]' member='&quot;Mauritania&quot;' />
                        <groupfilter function='member' level='[none:YEAR:ok]' member='1969.0' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:COUNTRY_NAME:nk]' member='&quot;Samoa&quot;' />
                        <groupfilter function='member' level='[none:YEAR:ok]' member='1990.0' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Upper middle income&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:COUNTRY_NAME:nk]' member='&quot;Tonga&quot;' />
                      <groupfilter function='member' level='[none:YEAR:ok]' member='1982.0' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:COUNTRY_NAME:nk]' />
                  <hierarchy name='[none:INCOME_GROUP:nk]' />
                  <hierarchy name='[none:YEAR:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[oracle.41959.928897986108].[avg:Calculation_7411117155930291:qk]' included-values='non-null'>
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INCOME_GROUP:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='%null%' />
                <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Upper middle income&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[oracle.41959.928897986108].[sum:Calculation_2951117145829777:qk]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[oracle.41959.928897986108].[sum:Calculation_9121117181803216:qk]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[oracle.41959.928897986108].[sum:TOTAL_DAMAGE:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>210000000.0</max>
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[sum:Calculation_2951117145829777:qk]</column>
            <column>[oracle.41959.928897986108].[avg:Calculation_7411117155930291:qk]</column>
            <column>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</column>
            <column>[oracle.41959.928897986108].[Exclusions (Country Name,INCOME_GROUP,Year 2)]</column>
            <column>[oracle.41959.928897986108].[sum:Calculation_9121117181803216:qk]</column>
            <column>[oracle.41959.928897986108].[sum:TOTAL_DAMAGE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' scope='rows' value='Avg. Damage GDP Ratio (ratio of USD)' />
            <format attr='subtitle' class='0' field='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' scope='cols' value='Avg. Significance Ratio (ratio of counts)' />
            <format attr='subtitle' class='0' field='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
              <lod column='[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]' />
              <lod column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='0.125' value-column='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' z-order='2' />
            <reference-line axis-column='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' formula='constant' id='refline1' label-type='none' scope='per-table' value='0.5' value-column='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='583' />
                <format attr='maxwidth' value='583' />
                <format attr='minheight' value='352' />
                <format attr='maxheight' value='352' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</rows>
        <cols>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</cols>
        <pages>
          <column>[oracle.41959.928897986108].[none:YEAR:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' start='14' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Upper Middle High nonOECD Income Group Disasters'>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
            </column>
            <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
            </column>
            <column caption='Disaster Type' datatype='string' name='[DISASTER_TYPE]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2951117145829777]' derivation='Avg' name='[avg:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Avg' name='[avg:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISASTER_TYPE]' derivation='None' name='[none:DISASTER_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[INCOME_GROUP]' derivation='None' name='[none:INCOME_GROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;High income: nonOECD&quot;' />
              <groupfilter function='member' level='[none:INCOME_GROUP:nk]' member='&quot;Upper middle income&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='206' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='medium' />
            <format attr='rounding' id='annotation_1' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' />
              <lod column='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk] + [oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk])</rows>
        <cols></cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontcolor='#f7f7f7'>Droughts and Storms have the biggest impact on the population (deaths, injuries, homeless, etc.) of High Income: nonOECD and Upper middle income countries</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.11165'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.17827105634532622'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.898058'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.09313753147837453'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Storms have the biggest impact on High Income: nonOECD and Upper Middle Income countries w.r.t. Total Damage (US dollars) to GDP ratio</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.169903'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.0040731198199314665'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.839806'>
                  <node-reference>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.00072181870226633541'>
                  <node-reference>
                    <axis>[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='World Disasters'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Significance Ratio and Damage GDP Ratio Geographical Distribution </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EMDAT_WORLDBANK (DS_NATURAL_DISASTERS)' name='oracle.41959.928897986108' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41959.928897986108'>
            <column caption='Country Name' datatype='string' name='[COUNTRY_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Dem. Rep. Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
                <semantic-value key='&quot;Dem. Rep. Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Islamic Rep. Iran&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Rep. Korea&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column caption='Significance Ratio' datatype='real' name='[Calculation_2951117145829777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([HOMELESS]+[DEATHS]+[AFFECTED]+[INJURED])/[POPULATION]' scope-isolation='false' />
            </column>
            <column caption='Damage GDP Ratio' datatype='real' name='[Calculation_9121117181803216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_DAMAGE]*100)/[GDP_US_DOLLARS]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[REGION]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2951117145829777]' derivation='Avg' name='[avg:Calculation_2951117145829777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9121117181803216]' derivation='Avg' name='[avg:Calculation_9121117181803216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY_NAME]' derivation='None' name='[none:COUNTRY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41959.928897986108].[Action (Disaster Type)]'>
            <groupfilter function='level-members' level='[DISASTER_TYPE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[Action (INCOME_GROUP)]'>
            <groupfilter function='level-members' level='[INCOME_GROUP]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.41959.928897986108].[none:REGION:nk]' filter-group='3'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:REGION:nk]' to='&quot;The Americas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41959.928897986108].[none:REGION:nk]</column>
            <column>[oracle.41959.928897986108].[Action (Disaster Type)]</column>
            <column>[oracle.41959.928897986108].[Action (INCOME_GROUP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' field-type='quantitative' max-size='1' min-size='0.398636' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' />
              <size column='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' />
              <text column='[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]' />
              <lod column='[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.0049999952316284' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41959.928897986108].[Latitude (generated)]</rows>
        <cols>[oracle.41959.928897986108].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Regional Analysis Dashboard'>
      <style>
      </style>
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' />
      <zones>
        <zone h='100000' id='33' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='36' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='34' type='layout-basic' w='85455' x='0' y='0'>
              <zone h='50000' id='32' name='Regional Pie' show-title='true' w='42728' x='0' y='50000'>
              </zone>
              <zone h='50000' id='40' name='World Disasters' show-title='true' w='85455' x='0' y='0'>
              </zone>
              <zone h='50000' id='43' name='Income Groups' show-title='true' w='42727' x='42728' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='35' is-fixed='true' param='vert' type='layout-flow' w='14545' x='85455' y='0'>
              <zone h='20825' id='37' name='Regional Pie' param='[oracle.41959.928897986108].[none:REGION:nk]' type='filter' w='14545' x='85455' y='0'>
              </zone>
              <zone h='21469' id='38' name='Regional Pie' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='filter' w='14545' x='85455' y='20825'>
              </zone>
              <zone h='21469' id='39' name='Regional Pie' pane-specification-id='0' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='color' w='14545' x='85455' y='42294'>
              </zone>
              <zone h='6824' id='41' name='World Disasters' pane-specification-id='0' param='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' type='color' w='14545' x='85455' y='63763'>
              </zone>
              <zone h='12118' id='42' name='World Disasters' pane-specification-id='0' param='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' type='size' w='14545' x='85455' y='70587'>
              </zone>
              <zone h='17295' id='44' name='Income Groups' pane-specification-id='0' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' w='14545' x='85455' y='82705'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Income Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sig. Ratio vs. Damage GDP Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2012.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]</field>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
          <field>[oracle.41959.928897986108].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sig. Ratio by Income Group '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]</field>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
          <field>[oracle.41959.928897986108].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Damage GDP Ratio by Income Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]</field>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
          <field>[oracle.41959.928897986108].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Low Income Group Disasters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]</field>
          <field>[oracle.41959.928897986108].[max:Calculation_9121117181803216:qk]</field>
          <field>[oracle.41959.928897986108].[none:CASE_ID:ok]</field>
          <field>[oracle.41959.928897986108].[none:COUNTRY_CODE:nk]</field>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='High Income Group Disasters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[:Measure Names]</field>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
          <field>[oracle.41959.928897986108].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Upper Middle High nonOECD Income Group Disasters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Disaster Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]</field>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
          <field>[oracle.41959.928897986108].[none:REGION:nk]</field>
          <field>[oracle.41959.928897986108].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Regional Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:REGION:nk]' type='filter' values='relevant' />
            <card param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
          <field>[oracle.41959.928897986108].[none:REGION:nk]</field>
          <field>[oracle.41959.928897986108].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='World Disasters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' type='color' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41959.928897986108].[none:REGION:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:COUNTRY_NAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Income Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Regional Analysis Dashboard'>
      <active id='32' />
      <zones>
        <zone name='Regional Pie'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='World Disasters'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Income Groups'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[oracle.41959.928897986108].[none:INCOME_GROUP:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Regional Pie' param='[oracle.41959.928897986108].[none:REGION:nk]' type='filter' values='relevant' />
        <zone name='Regional Pie' pane-specification-id='0' param='[oracle.41959.928897986108].[none:DISASTER_TYPE:nk]' type='color' />
        <zone name='World Disasters' pane-specification-id='0' param='[oracle.41959.928897986108].[avg:Calculation_9121117181803216:qk]' type='color' />
        <zone name='World Disasters' pane-specification-id='0' param='[oracle.41959.928897986108].[avg:Calculation_2951117145829777:qk]' type='size' />
        <zone name='Income Groups' pane-specification-id='0' param='[oracle.41959.928897986108].[none:INCOME_GROUP:nk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Income Group' width='192'>
      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
      EvqP9SszvgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sig. Ratio vs. Damage GDP Ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sig. Ratio by Income Group ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Damage GDP Ratio by Income Group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Low Income Group Disasters' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='High Income Group Disasters' width='192'>
      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
      WYo3TqUSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Upper Middle High nonOECD Income Group Disasters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Disaster Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regional Pie' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAVaUlEQVR4nO3dWXOc1Z3H8e+zdD/drW7tsixZlm2MwRBilrBl4CJLVQLUJBUmgVzMzEWK
      yUUmVZmrXOQmL2BuUjU1V5NlQsKEKQhJgJBkEpKACfvuHVteJNlaWku3Wr0+yzlz0RgsS7a1
      9CY//0+Vq0C0nueYPr/nOec85znH0FprhAgps9kFEKKZJAAi1CQAItQkACLUJAAi1CQAItQk
      ACLUJAAi1CQAItQkACLUJAAi1CQAItQkACLUJAAi1CQAItQkACLUJAAi1CQAItQkACLUJAAi
      1CQAItQkACLUJAAi1CQAItQkACLUJAAi1CQAItQkACLUJAAi1CQAItQkACLUJAAi1OxmF+By
      giBgfHwc227pYopNrOVrluM4DAwMNLsY4iolTSARahIAEWoSABFqEgARahIAEWoSABFqEgAR
      ahIAEWoSABFqEgARahIAEWoSABFqEgARahIAEWoSABFqEgARahIAEWoSABFqEgARahIAEWoS
      ABFqEgARahIAEWoSABFqEgARahIAEWoSABFqEgARahIAEWoSABFqEgARahIAEWoSABFqEgAR
      ahIAEWoSABFqEgARahIAEWotv02qqA2tNSiNDjQGH/6z66PLHgQKfEXGC3gtW0FbJomoxdaO
      GD1JB8c2iZgmTsTENg0Mw2j2X6dmJABXMa01uhzgpYv4syW8mSKG6xHrMtDFCii95PM5DP79
      7UnG8u5HP4vZJoNdcYa6Etw02M6eLUl29raxuy9JKmZv+jBIAK4yWmu0UgSzZUqH5qicyuLP
      lwkWPfAVzmCcqBPHuKjyX0rZV5yaKXBqpsD+4zPEIiZbUg5DXQn+bncv99+0lR09CaxNemeQ
      AFwltFYUMxkWZ6aYP36axLEE9lxk2eeCikK5Cmud33zZU4zNlxibL/HaqTkOjOb4h5u3s3co
      SXcyQipubaogSAA2Oa01bjFP+vgxZk+PUFrIopXGig9jmx2gln4+WPRQxShWu7Xhczu2xQ39
      HZRcxfuncyTjNtu6HXb0xYlFLTZDDiQAm5TWmspijvTJ40wdOYhXKYP+uFlTTOaI2+2Y7tJa
      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
    </thumbnail>
    <thumbnail height='192' name='World Disasters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income Groups' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAQLUlEQVR4nO3dWYxd9X3A8e//LHefe2f3jMcesFnGGMxWoJAGyXEILRVVo4KFaRK1TbOI
      FFmir3nJa16Sh0hRUCVEpPJSlCZiTSl4IBhwMDbYeLfj3Z4ZPKtn7nqWfx8mphjGw9i+954z
      8/99JL/AzP3/7Xu/9+znKK21RghDWVFPQIgoSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwm
      AQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKA
      MJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaE7UE1io0dFRSqVS
      1NMQS8yiCcDzPHp6ekgkElFPRSwhsgokjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQg
      jCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJo
      EoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjLZo
      nhIpFk5rTej7eLUaYeATBgGEASk7wLEBywEnCW4GLDvq6UZKAlgKtGZ6YozJoSFmJsY4P3qO
      0uQE5Zlp/FqNwKvhqoC7eydZZg2Bk4JUHrKdkOuBll7ovAHaVoGbBqWi/hs1jQSwyGit//wN
      7zH1yQin9n3M6f17GT11nGqxhFet4FXKs9/6n5HNJFjnjYK36+IXdFKzS4J0K2Q6oHst3PQw
      9P0FYbIFZbmoJRyEBLBIaK2pVcpMnD3N6f17ObJ9G2cP7UeH4dW9sF+Z/VMeh/GjcHo77Pw1
      ZDp4886N+Nd/nYH2AfpyfTjW0vu4LL2/0RIUhgHHPtzBke3vcebAPiaGz4LWDR2z6Jd57vQb
      fDwyyEDbAPcuv5eHVz9Mf0v/kloiSABxpTXVcomhIwfZ9dqrnN7/MdViEd3gDz6ABva0LuOE
      DWW/zEfnPmLv2F5eOfoKG/o38NjAYyzLLsOxHBSLOwYJIIYC3+fciaPsfOUFDr//Ln6t1tTx
      fcvhAztkTPuf/jcv9Dg5fZJn9z7LlpNb2LRmEw/0P0Bvrrepc6s3CSBmqqUiH732CvvfHmTs
      9Clmv4+bazyVZXeuFd+fmPP/n5w+yS8+/AWDpwbZfMdmbuu6bdGuFkkAMRH4PmOnTvDWc89w
      ev9eQt//8l9qkOOOwy5dnvdnyn6Z7cPbeerNp9h440YevfFRujPdTZph/UgAMRB4Hvu3vskH
      L/33n7/1o/V2z2qK3siCfna0PMrTu5/m8MRhnrzjSVYXVi+qpYEEELHA99n56gtsf+E3lKfP
      Rz0dfGXxBvN/+39eqEO2nNzCVHWKzXdu5tauW7HU4jjLZnHMcomamRhn8Nf/wTv/9Z+x+PAD
      /LFvLUPe9GX/XkjI9pHtbN6ymcFTg/hhdKtwl0OWABGpFGd4+7lnObjtbQLPi3o6AATKYtD2
      CK9iw3uiOsFP3/8pXuCxoX8DCTtRxxnWnywBmkxrTbVY5N3nn+PAu2/F5sMPcCbfxR5bX/V+
      p6HiED/b8TPeOv0Wob7KI9UNJgE0WbVU5J3nn2P367//wvk6UdIoPkq4nKjTJ2KoOMRP3v0J
      7w+/H+sIJIBm0prdr7/KnsH/jdU3P0DZTbArm2MmqNTtNc/XzvPzHT9n39g+rn650hgSQJOE
      YcjRndv54KXf4VUuby9LM4w5LttSqbq/7oHxAzy9+2mGZobq/tr1IAE0gdaacyeO8c7zz1E+
      PxX1dOa0u205J6vjdX/dUIe8eepNntnzTCz3DEkATeBVK3zwwm84d+JY1FO5pDda8g19/Rf/
      9CLvnHmnoWNcCQmgwbTWHHxvKwe3bb36c/cb5GTrcnbWRhs6Rskv8atdv+LIxJGmnNG6UBJA
      g00Mn2Xny7+L7YdfA1tb8sw04fSF/eP7+e2R31Kp44b21ZIAGsiv1dg7+DrjQ2einsolzSRz
      7FAeVd34XbKBDnjp6Escnzre8LEWSgJoEK01Q4cPsu/tLZGe2TkfDRzK5NiTSjdtzPHKOL/8
      6JdUg2rTxpyPBNAoWnNo21ZmxseinsklhcpiXyrFiD/T1HF3frKTnSM7mzrmpUgADTI9Psa+
      twejnsa8yrbD1tZugiYfqZ2uTfPqsVcpeaWmjjsXCaABdBjy4e9fpFaO/g2ez5lMge0N3vsz
      F43mvaH3Zo8QR7xHSAJogJmJMU7t3R31NL7UH7quwYvo4NRIcYQdIzsImrDxPR8JoM601pze
      v5epkeGopzKvYiLNlmDua36bQaN57cRrlPxol5ISQJ3VKmVO7d1NpdjcDcvL9WH7Cs7a0V66
      eGjiEAfHD0Y6BwmgzkpTkwwdifZN/TK+ZbNDVZnS0e+ejfr0CAmgzs6f+4TxGFzYPp+hTIEd
      udam7/2Zy7ahbZHuDZIA6uzswf2EMT3tAWYPfh1zXQ7peJyOMFYZ4/Dk4cjGlwDq6MIGcNxt
      6+ynGJPzcWZqMxyfOh7ZBTMSQB0FnsfIsei+zRai7KZ42YrHhx+g6BU5OnU0sssmJYA6mh47
      R+jH5zrfuXzYfR3jtfhclKPRDBeHKdaKkYwvAdTR5MgwYRjfAELL4n/c+G2fjFXGKPoSwKI3
      OXw2tuf9Axwr9LJbxetifICJygRlL5rrpCWAOipNTUV+bst89jgwHMN3fKo6RdmXABa9WrnU
      8Ce3XI1Rb4Zi2NxnDSxE2S/jhdEsmSSAOvKqlVgvAeK6clYLapHdMUICqCOvEo+rnObiWYoZ
      O563gq2FtcjOCo3nv8gi1eg7glu2jeUksCwXjYMOHJSVJJPvIJnrQlkFfD9LZSaD7188GcdR
      PPTmIN/Zd2DB46lkAnJZwkyKIJukmnaopixKScVMQjOd8Bl3akw6VUatEpN2Fe1YYNto20Lb
      FoGlCG0IFPiWxleamhVSUwEeARqwLCuyZ41JAHVkO25dXkdZFolUhkQ6j7KzhEEKr5pC2RmS
      2TyOm0eTxq+lqFVdqp6i+rkzmz9/k4cggGBGkbmcTYBaDaYv4xcsC1IOOpUgTCYIEjZe0qbm
      QsWBkhtSsgOmbY/zVpVpKyBI2jj5PF1fjeYu0hJAHSUyGZRSC9wOmP2Eusk06UIHyUwnqDxe
      NUellEZZSbSdAssF5WJho0OLahmqV7jDJAwavH0ShlCqoEoVbMAGEkB2vt+xNfYym57H7cbO
      7RIkgDrKtXWgLAu0xnaT2E4KpVzCcPZPIlMgk+/CdlvRuoVKMUut4lLzFBcdnFWzO5P8+O2y
      r78gwElnsJL1vy/pQkgAdZTvupZs+33UKi5uKoebbAGVml2FqSUIA8XM1OJ5flazWC0tqGQy
      krElgDoq9KxGOfegHI3vK+J2OyBt22ilUDHbVWt3dGBl511RahjZDVpH7T0tKMuBmD49Pehc
      QZhtjXoaX5BY0Yedb+zNeS9FAqijRMoh1xbNuuxCeIUewlQu6mlcRCWTuMv7UE40KyMSQD0p
      WLYqmm+yhSg7eTwrXoFaLS0kVq/+4n7bZo0fyahL2Mo1bXFdA6Jctanp+hyrqBenrY3UTWsi
      G18CqLPW3iyZfDwfDer7Gq/zmqincZHkwI3Y7e2RjS8B1Fk2n2DZtTFeDepfF/UULpLbsGH2
      2ElEJIA6S2Zceq8rYDvx/KctZnqinsKn7M5OMnfdFekc4vkuLWKWrei9oZVsazQHdr7MVDUZ
      mweW5u6/H7tQiHQOEkADdPe30BPTvUGlYkjYuSLqaWDl8+Qf/AYqEe32kgTQAJZtseYrvVFP
      Y25KUV15U9SzIL3uFpJr16Ii2v15gQTQIL3XF+i9Pn5HXQGK+ZWRjq/SaVoe/Gucrq5I5wES
      QMPYjsWtX1uBm4zmNN9LU0x50Zx3c0Fy9WryD/1NpHt/Loh+BkuUUore6wosvyF+S4Gi5xKm
      MtEMblm0fesfIzv35/MkgAbKFBKsW7+CTCFeB8b8TBtBRwSrQUqR+9p6cuvXN3/sS5AAGkgp
      xcqb2rn+zu6op3IRP9lCNdvZ9HGdZcto27QJu62t6WNfigTQYJatWLd+Ba3dEa1yzMHDpUKT
      T4qzLAp/9zCZu+6KfM/PZ0kATVDoSnPfP1wXm1WhWg1KYRrdxI3Q9J130PnEE1jp5j2UeyEk
      gCZQ1uyq0Nq/Wo4V8XO5LvC6r0Unm7M3yO3vp2vzZqxMfJaCF0gATeImbW7dsIIVa+Kx/lst
      LCd0G/9tbLe20vG9fyVz++0NH+tKSABNlM4lWP+tNfQNtEV1/ceninYBXzX2KiyVSNDxg+/T
      +sgjkZ/ycCkSQJPl2pLc+/er6VgR7aWJpbLCV437UKpEgsIjj9C2aRPKjtvBwP8nATSZUoru
      a/Ns+M5NFLqi2yAMAk2tb6Ahr62SSVo3bqTryX9DxWyj9/MkgAhYlqKrv4UHv3czPasLka0O
      lfvW1v01VTpN2+OP0/XvT+F0dMRql+dcJIAIda5s4f7HbqBvIJoN45lEfQ+GWfkWOv75n+j8
      0RPYEd3n53JJABG6sCT4xndvZs19vU0/cW6q5KKtOoypFG7fcnp+/GM6fvhDrJaWq3/NJpE7
      w0VMKUUmn+CrG6+noy/L7sHTTI815zGmVc8i6FqJM3L8il9DuS6Zu++m80dPRH5545WQAGIi
      mXFZt34FnStybH/5OGePTNLoaxe17VJddt2VB+A4tH/3X2h9dCNu3/K6zq1ZJIAYsR2LvoE2
      uvpbOPDeMHv+cIbzo+WG3dY8tGyK2Z75b18+ByubJXPXXXT84Pukb78dLCv2G7uXIgHEjFKK
      ZMbltg0rWX5DKwf/OMyRnZ9QnKj/45e0VkxXE3SxwHt5uS7pW26m8M1v0vLAAzjt7ZHd0a1e
      JIC4UtC5MkfrslXceM8y9m09y9Fd56hMe3V7EKXWUFEZdDqHKs9c+gcdh8SqVbR/+9tkv3If
      bl9fLK7mqgcJIMaUUrhJh+5r8nT357n74VUc3j7Csd2jnB8tU5yoXnUMXqEHv62XRPnwxWOn
      Uri9vaRvu5X8Q39L5r57sWJ6OsPVkAAWCwXZQpLbvr6Sgb/sYezMDEN/Os/w0UnGzhQpTl7Z
      KpKXaMFL5EkAuC6Jvj4y99xDat0tpAYGSK5ZsyQ/+BcoHecH237G0NAQHR0dJJbwm3G5Aj+k
      VvapVQImhot8cvw840NFJkfKlGdqhIFGh3p2KXHhbVYKZc0eg7Adi/buJAPspWt5mtTatTjt
      bVitrVjp9JJZzZmPBLAEaa3xqgHFqSpeJcCvBXjV2cdkuymbRNImlXPJ5BNY9tL/kM9HVoGW
      IKUUiZRDIiVv75cxO39hPAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaT
      AITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlA
      GE0CEEaTAITRJABhNAlAGE0CEEaTAITRJABhNAlAGE0CEEaTAITR/g9kYSKKzOyBXgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Regional Analysis Dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
